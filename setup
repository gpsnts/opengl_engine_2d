#!/bin/bash

CXX_FLAGS="-lGL -lX11 -lXrandr -lpthread -lXi -lm -ldl -lSOIL -fpermissive"

usage()
{
	cat <<EOF

	cmds: ${0##*/} [flags]
		--ce (Clean env)
		--se (Setup env)
		--re (Run env)
		--ef (Flags)

		### Gabriel Porto dos Santos - <https://github.com/gpsnts/> ###
EOF
}

if [[ -z $1 || $1 = @(-h|--help) ]]
then
  usage
fi

_show_flags()
{
  echo "Flags -> $CXX_FLAGS";
}


_setup_env()
{
  cmake -S . -B build -G "Ninja" -D CMAKE_C_COMPILER="$(which gcc)" -D CMAKE_CXX_COMPILER="$(which g++)" -D CMAKE_CXX_FLAGS="$CXX_FLAGS" $1;
  cd build;
  ninja;
  cd ..;
}

_clean_env()
{
  rm -rf build CMakeCache.txt CMakeFiles cmake_install.cmake Makefile;
}

_run_env()
{
  if [[ -d "build" ]]
    then
      cd build;
      ./app;
    else
      if [[ ! -d "build" ]]
      then
        _setup_env;
      fi
      ./app;
  fi
}



while [[ "$1" ]]
do
  case "$1" in
    "--se") _show_flags; _setup_env; printf "\n"; echo "********************"; echo "Ambiente configurado"; echo "********************"; printf "\n";;
    "--ce") _clean_env; printf "\n"; echo "********************"; echo "Ambiente limpo"; echo "********************"; printf "\n";;
    "--re") _run_env;;
    "--ef") _show_flags;;
    *) printf "\n"; echo 'Invalid'; usage; printf "\n"; exit 1;;
  esac
  shift
done
